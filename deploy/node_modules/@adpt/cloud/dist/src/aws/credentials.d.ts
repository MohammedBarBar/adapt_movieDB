import Adapt, { Component, Constructor, Context } from "@adpt/core";
/** @beta */
export interface AwsCredentialsProps {
    awsAccessKeyId: string;
    awsSecretAccessKey: string;
    awsRegion: string;
}
/** @beta */
export interface WithCredentials {
    awsCredentials?: AwsCredentialsProps;
}
/** @beta */
export declare type AwsCredentialsContext = Context<AwsCredentialsProps>;
/** @beta */
export declare function awsCredentialsContext(defaultCreds: AwsCredentialsProps): Adapt.Context<AwsCredentialsProps>;
/** @beta */
export declare const awsDefaultCredentialsContext: Adapt.Context<AwsCredentialsProps>;
/** @beta */
export declare function withCredentials<W extends Constructor<Component<any, any>>>(Wrapped: W, Ctx?: AwsCredentialsContext): (props: Adapt.PropsType<W> & Adapt.WithChildren) => Adapt.AdaptElement<Adapt.AnyProps>;
/** @beta */
export interface AwsCredentials {
    awsAccessKeyId: string;
    awsSecretAccessKey: string;
    awsRegion: string;
}
/** @beta */
export interface AwsCredsOptions {
    credsFile?: string;
}
/** @beta */
export declare function loadAwsCreds(options?: AwsCredsOptions): Promise<AwsCredentials>;
//# sourceMappingURL=credentials.d.ts.map