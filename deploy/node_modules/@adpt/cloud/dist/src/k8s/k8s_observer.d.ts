import { ExecutedQuery, ObserverPlugin, ObserverResponse } from "@adpt/core";
import { GraphQLSchema } from "graphql";
import { Response } from "node-fetch";
import { CustomError } from "ts-custom-error";
export declare class K8sNotFound extends CustomError {
    request?: {
        kind: string;
        name: string;
    };
    constructor(jsonBody: any);
}
export declare class K8sResponseError extends CustomError {
    status: any;
    constructor(resp: Response, status: any);
}
export declare class K8sObserver implements ObserverPlugin {
    static observerName: string;
    readonly schema: GraphQLSchema;
    observe: (queries: ExecutedQuery[]) => Promise<ObserverResponse<object, any>>;
}
//# sourceMappingURL=k8s_observer.d.ts.map