import Adapt, { SFCDeclProps } from "@adpt/core";
declare const testRedisDefaultProps: {
    image: string;
    imagePullPolicy: string;
    port: number;
};
/**
 * Props for {@link redis.TestRedis}.
 *
 * @public
 */
export interface TestRedisProps {
    /** Image to use for container, defaults to redis:buster */
    image: string;
    /** Specifies when to pull image, defaults to `"Always"` */
    imagePullPolicy: "Always" | "IfNotPresent" | "Never" | undefined;
    /** Port on which the Redis service is exposed */
    port: number;
}
/**
 * Deploys a {@link https://redis.io | Redis} container suitable for testing
 *
 * @remarks
 *
 * Uses an abstract {@link Service}, {@link NetworkService}, and {@link Container}
 * component that must be substituted in a style sheet.
 *
 * * See {@link redis.TestRedisProps}.
 *
 * @public
 */
export declare function TestRedis(props: SFCDeclProps<TestRedisProps, typeof testRedisDefaultProps>): Adapt.AdaptElement<Adapt.AnyProps>;
export {};
//# sourceMappingURL=TestRedis.d.ts.map