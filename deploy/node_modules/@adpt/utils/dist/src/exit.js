"use strict";
/*
 * Copyright 2020 Unbounded Systems, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const process_global_1 = require("./process_global");
const exitGlobals = process_global_1.processGlobal("exitGlobals", () => {
    const g = {
        capExit: require("capture-exit"),
        graceful: require("@unboundedsystems/node-graceful"),
        handlers: new Map(),
    };
    g.capExit.captureExit();
    return g;
});
const { capExit, graceful } = exitGlobals;
/**
 * Register a callback that will get called no matter how the process exits.
 * @remarks
 * If `handler` returns a `Promise`, exit will be delayed until the promise
 * resolves.
 */
function onExit(handler) {
    const capHandler = (code) => handler("exit", code);
    capExit.onExit(capHandler);
    const graceHandler = (sig, details) => {
        capExit.offExit(capHandler);
        return handler(sig, details);
    };
    graceful.on("exit", graceHandler);
    return () => {
        capExit.offExit(capHandler);
        graceful.off("exit", graceHandler);
    };
}
exports.onExit = onExit;
//# sourceMappingURL=exit.js.map