export declare type ArrayKeys<T> = {
    [K in keyof T]: Required<T>[K] extends any[] ? K : never;
}[keyof T];
/**
 * Given an object, will sort any properties of that object that are arrays.
 * The sort of each array happens in-place, modifying the original arrays.
 * @param obj An object whose array properties will be sorted
 * @param keys  The specific property names to sort
 */
export declare function sortArraysInObject<T extends object>(obj: T, keysIn?: ArrayKeys<T>[], ignoreNonArrays?: boolean): void;
export declare function sortArray<T>(arr: T[]): T[];
//# sourceMappingURL=sort_arrays.d.ts.map