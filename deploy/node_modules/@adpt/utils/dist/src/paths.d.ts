/**
 * Given a directory path in the execution directory (i.e. "dist"), return
 * the corresponding source directory.
 * @param dirname Runtime execution directory to translate into source
 *     directory. Typically just pass your local __dirname for the current
 *     file. Must be absolute path.
 */
export declare function sourceDir(dirname: string): string;
/**
 * Given a directory path in the execution directory (i.e. "dist"), return
 * a set of directory paths for the enclosing NPM package.
 * @param dirname Runtime execution directory within an NPM package.
 *     Typically just pass your local __dirname for the current
 *     file.
 */
export declare function findPackageDirs(dirname: string): {
    root: string;
    repoRoot: string;
    test: string;
    dist: string;
};
export declare const utilsDirs: {
    root: string;
    repoRoot: string;
    test: string;
    dist: string;
};
export declare const repoRootDir: string;
export declare const repoDirs: {
    "core": string;
    "cli": string;
    "cloud": string;
    "dom-parser": string;
    "testutils": string;
    "utils": string;
};
/**
 * Given a local file path, convert it to a file:// URL.
 * @param pathString Local filesystem path. If not absolute, path.resolve
 *     will be used to convert it to absolute first.
 */
export declare function filePathToUrl(pathString: string): string;
//# sourceMappingURL=paths.d.ts.map