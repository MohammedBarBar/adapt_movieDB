import { ConstructorValues, ForEachCallback } from "@usys/collections-ts/common";
import Set = require("@usys/collections-ts/set");
export declare class ObjectSet<T extends object> {
    defaults?: Partial<T> | undefined;
    readonly store_: Set<T>;
    constructor(values?: ConstructorValues<T>, defaults?: Partial<T> | undefined);
    readonly length: number;
    add(value: T): boolean;
    has(value: T): boolean;
    clear(): void;
    delete(value: T): boolean;
    forEach<Thisp = undefined>(callback: ForEachCallback<T, T, ObjectSet<T>, Thisp>, thisp?: Thisp): void;
    withDefaults(value: T): T;
    [Symbol.iterator](): IterableIterator<T>;
}
//# sourceMappingURL=object_set.d.ts.map