import { DocumentNode as GraphQLDocument } from "graphql";
import { ObserverNeedsData } from "./errors";
import { ExecutedQuery, Observations } from "./obs_manager_deployment";
export declare const gql: (literals: TemplateStringsArray, ...placeholders: any[]) => GraphQLDocument;
export { ObserverNeedsData, throwObserverErrors, } from "./errors";
export { createObserverManagerDeployment, ObserverManagerDeployment, ExecutedQuery, simplifyNeedsData, ObserversThatNeedData, Observations, Variables, } from "./obs_manager_deployment";
export { ObserverPlugin, ObserverResponse } from "./plugin";
export { registerObserver, observe, makeObserverManagerDeployment, ObserverNameHolder, } from "./registry";
export { Observer, ObserverProps, } from "./Observer";
export declare function patchInNewQueries(observations: Observations, queries: {
    [name: string]: ExecutedQuery[];
}): void;
export declare function isObserverNeedsData(e: any): e is ObserverNeedsData;
//# sourceMappingURL=index.d.ts.map