/// <reference types="node" />
import { PackageRegistry } from "@adpt/utils";
export declare type MummyJson = string;
export declare type MummyUrn = string;
export declare class MummyRegistry {
    jsonToObj: Map<string, any>;
    objToJson: Map<any, string>;
    packageRegistry: PackageRegistry;
    constructor();
    awaken(mummyJson: MummyJson): Promise<any>;
    findMummy(obj: any): MummyJson;
    entomb(obj: any, mummyJson: MummyJson): void;
    print(): void;
}
export declare function registerObject(obj: any, name: string, modOrCallerNum?: NodeModule | number, altNamespace?: string): void;
export declare function registerConstructor(ctor: Function & {
    displayName?: string;
}): void;
export declare function findConstructorModule(ctorName: string, displayName: string | undefined): NodeModule;
export declare function callerModule(callerNum: number): NodeModule;
export declare function reanimate(mummy: MummyJson): Promise<any>;
export declare function findMummy(obj: any): MummyJson;
export declare function mockRegistry_(newRegistry?: MummyRegistry | null): MummyRegistry;
export declare function findMummyUrn(obj: any): MummyUrn;
export declare function reanimateUrn(mummyUrn: MummyUrn): Promise<any>;
//# sourceMappingURL=reanimate.d.ts.map