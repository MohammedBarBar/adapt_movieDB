export declare function isClassWithoutNewError(e: Error, name?: string): e is TypeError;
export interface Children<C> {
    children?: C | (C | C[])[];
}
export declare type ChildType<T> = T extends {
    [Name in keyof Required<Children<any>>]: infer Ret;
} ? Ret : T extends {
    [Name in keyof Required<Children<any>>]?: infer Ret;
} ? Ret : null;
//# sourceMappingURL=type_support.d.ts.map