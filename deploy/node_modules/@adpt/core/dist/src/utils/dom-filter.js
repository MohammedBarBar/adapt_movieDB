"use strict";
/*
 * Copyright 2018-2019 Unbounded Systems, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const utils_1 = require("@adpt/utils");
const lodash_1 = tslib_1.__importDefault(require("lodash"));
const jsx_1 = require("../jsx");
exports.publicElementFields = {
    props: null,
    componentType: null
};
function deepFilterElemsToPublic(o) {
    if (!utils_1.isObject(o))
        return o;
    if (lodash_1.default.isArray(o)) {
        return o.map((item) => deepFilterElemsToPublic(item));
    }
    if (jsx_1.isElement(o)) {
        const filtered = lodash_1.default.pickBy(o, (value, key) => {
            return key in exports.publicElementFields;
        });
        if (filtered.props != null) {
            // Don't include props.handle
            const _a = filtered.props, { handle } = _a, fProps = tslib_1.__rest(_a, ["handle"]);
            filtered.props = deepFilterElemsToPublic(fProps);
        }
        return filtered;
    }
    const ret = {};
    // tslint:disable-next-line:forin
    for (const key in o) {
        ret[key] = deepFilterElemsToPublic(o[key]);
    }
    return ret;
}
exports.deepFilterElemsToPublic = deepFilterElemsToPublic;
//# sourceMappingURL=dom-filter.js.map