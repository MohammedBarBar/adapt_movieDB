import { Handle } from "../handle";
import { Dependency, DeployHelpers, IsDeployedFunc, Relation, RelationExt, Waiting } from "./deploy_types";
export declare const waiting: (status: string, related?: (Handle<import("..").GenericInstance> | Waiting)[] | undefined) => Waiting;
export declare const True: () => Relation;
export declare const False: () => Relation;
export declare const Identity: (a0: Relation) => Relation;
export declare const Not: (a0: Relation) => Relation;
export declare const And: (...relatesTo: Relation[]) => Relation;
export declare const Or: (...relatesTo: Relation[]) => Relation;
export declare const Edge: (a0: Dependency, a1: Dependency, isDeployed: IsDeployedFunc) => RelationExt;
export declare type BoolVal = boolean | (() => boolean);
export declare const Value: (v: BoolVal, description?: string) => Relation;
export declare function AllOf(h: DeployHelpers, deps: Dependency[]): Relation;
export declare function Only(h: DeployHelpers, dep: Dependency): Relation;
export declare function AnyOf(h: DeployHelpers, deps: Dependency[]): Relation;
export declare function None(): Relation;
//# sourceMappingURL=relations.d.ts.map