import { CustomError } from "ts-custom-error";
import { VmModule } from "./context";
import { ChainableHost } from "./hosts";
import * as ts from "./tsmod";
export declare class CompileError extends CustomError {
    diags: ts.Diagnostic[];
    constructor(diags: ts.Diagnostic[], msg: string);
}
export declare class Compiler {
    service: ts.LanguageService;
    private baseHost;
    private primaryChain;
    private projectVersion;
    private _rootFiles;
    constructor(projectRoot: string, rootFiles: string[], chainHost: ChainableHost, compilerOptions?: ts.CompilerOptions);
    readonly host: ChainableHost;
    rootFiles: string[];
    getProjectVersion(): string;
    compile(code: string, filename: string, module: VmModule, lineOffset?: number): string | null;
    registerExtension(ext: string, mainModule: VmModule): void;
    dir(): void;
    private _compile;
}
//# sourceMappingURL=compile.d.ts.map