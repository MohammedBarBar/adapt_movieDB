import { AdaptElement, AnyProps, AnyState, Component } from "./jsx";
import { StateNamespace } from "./state";
declare const defaultKeySym: unique symbol;
export interface ElementKey {
    key?: string;
    [defaultKeySym]?: boolean;
}
export declare function isDefaultKey(props: AnyProps & ElementKey): boolean;
export declare function setKey(elem: AdaptElement, key: ElementKey): void;
export declare function computeMountKey(elem: AdaptElement, parentStateNamespace: StateNamespace): ElementKey;
export declare function assignKeysAtPlacement(siblingsIn: any | any[] | null | undefined): void;
export declare class KeyTracker {
    private path;
    private names;
    private depth;
    constructor();
    lastKeyPath(): string;
    addKey(component: Component<AnyProps, AnyState>): void;
    pathPush(): void;
    pathPop(): void;
}
export {};
//# sourceMappingURL=keys.d.ts.map